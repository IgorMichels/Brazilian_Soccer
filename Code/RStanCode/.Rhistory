print(c('R2: ', 1 - mean(((theta_medio-mean(theta_medio))/sd(theta_medio)-(a-mean(a))/sd(a))^2)))
asort = sort(a, index.return = TRUE);
plot(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio))/sd(theta_medio), type ="b", col = "red", xlab = "prof reais", ylab = "prof estim")
line(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio), col = "blue", xlab = "prof reais", ylab = "prof estim")
line(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio), col = "blue", xlab = "prof reais", ylab = "prof estim")
theta_medio <- summary(profic_fit)$summary[1:n_players,1]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 4]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 6]
print(c('a', (a-mean(a))/sd(a)))
print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean(((theta_medio-mean(theta_medio))/sd(theta_medio)-(a-mean(a))/sd(a))^2)))
asort = sort(a, index.return = TRUE);
plot(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio))/sd(theta_medio), type ="b", col = "red", xlab = "prof reais", ylab = "prof estim")
line(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
line(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
line(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
point(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
plot(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio))/sd(theta_medio), type ="b", col = "red", xlab = "prof reais", ylab = "prof estim")
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
theta_q25
theta_medio
theta_q75
summary(profic_fit)
theta_medio <- summary(profic_fit)$summary[1:n_players,1]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
print(c('a', (a-mean(a))/sd(a)))
print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean(((theta_medio-mean(theta_medio))/sd(theta_medio)-(a-mean(a))/sd(a))^2)))
asort = sort(a, index.return = TRUE);
plot(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio))/sd(theta_medio), type ="b", col = "red", xlab = "prof reais", ylab = "prof estim")
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
print(c('a', (a-mean(a))/sd(a)))
print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean(((theta_medio-mean(theta_medio))/sd(theta_medio)-(a-mean(a))/sd(a))^2)))
asort = sort(a, index.return = TRUE);
plot(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio))/sd(theta_medio), type ="b", col = "red", xlab = "prof reais", ylab = "prof estim")
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
print(c('a', (a-mean(a))/sd(a)))
print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean(((theta_medio-mean(theta_medio))/sd(theta_medio)-(a-mean(a))/sd(a))^2)))
asort = sort(a, index.return = TRUE);
plot(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio))/sd(theta_medio), type ="b", col = "red", xlab = "prof reais", ylab = "prof estim")
line(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
points(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
rstan:::rstudio_stanc("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.stan")
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
n_obs = 10;
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
print(c('a', (a-mean(a))/sd(a)))
print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean(((theta_medio-mean(theta_medio))/sd(theta_medio)-(a-mean(a))/sd(a))^2)))
asort = sort(a, index.return = TRUE);
plot(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio))/sd(theta_medio), type ="b", col = "red", xlab = "prof reais", ylab = "prof estim")
lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
a
print(c('a', (a-mean(a))/sd(a)))
help var
? var
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
lines(x=c(asort$x(1), asort$x(n_players)), y=c(theta_medio(asort$ix(1)), theta_medio(asort$ix(n_players))))
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
#print(c('a: ', (a-mean(a))/sd(a)))
#print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
asort = sort(a, index.return = TRUE);
plot(x=asort$x-mean(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio)), type ="p", col = "red", xlab = "prof reais", ylab = "prof estim")
lines(x=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), y=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), col = 'green')
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
#lines(x=(aso
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
#print(c('a: ', (a-mean(a))/sd(a)))
#print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
asort = sort(a, index.return = TRUE);
plot(x=asort$x-mean(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio)), type ="p", col = "red", xlab = "prof reais", ylab = "prof estim", bg = "red")
lines(x=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), y=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), col = 'green')
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
#print(c('a: ', (a-mean(a))/sd(a)))
#print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
asort = sort(a, index.return = TRUE);
plot(x=asort$x-mean(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio)), type ="p", col = "red", xlab = "prof reais", ylab = "prof estim", pch = "red")
lines(x=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), y=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), col = 'green')
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
plot(x=asort$x-mean(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio)), type ="p", col = "red", xlab = "prof reais", ylab = "prof estim", pch = 15)
plot(x=asort$x-mean(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio)), type ="p", col = "red", xlab = "prof reais", ylab = "prof estim", pch = 21)
plot(x=asort$x-mean(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio)), type ="p",
col = "red", xlab = "prof reais", ylab = "prof estim", bg = "red", pch = 21)
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
#print(c('a: ', (a-mean(a))/sd(a)))
#print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
asort = sort(a, index.return = TRUE);
plot(x=asort$x-mean(asort$x), y=(theta_medio[asort$ix]-mean(theta_medio)), type ="p",
col = "red", xlab = "prof reais", ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), y=c(asort$x[1]-mean(asort$x), asort$x[n_players]-mean(asort$x)), col = 'green')
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q25[asort$ix]-mean(theta_medio))/sd(theta_medio))
#lines(x=(asort$x-mean(asort$x))/sd(asort$x), y=(theta_q75[asort$ix]-mean(theta_medio))/sd(theta_medio))
a
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
#print(c('a: ', (a-mean(a))/sd(a)))
#print(c('theta', (theta_medio - mean(theta_medio))/sd(theta_medio)))
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
asort = sort(a, index.return = TRUE);
x = asort$x-mean(asort$x)
y = theta_medio[asort$ix]-mean(theta_medio)
plot(x=x, y=y, type ="p", col = "red", xlab = "prof reais",
ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(x[1], x[n_players]), y=c(y[1], y[n_players]), col = 'green')
arrows(x=x, y=y, x1=x, y1=y+theta_q75[asort$ix], code=3, col="red", lwd=2)
arrows(x=x, y=y, x1=x, y1=y-theta_q25[asort$ix], code=3, col="red", lwd=2)
plot(x=x, y=y, type ="p", col = "red", xlab = "prof reais",
ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(x[1], x[n_players]), y=c(y[1], y[n_players]), col = 'green')
arrows(x=x, y=y, x1=x, y1=y+theta_q75[asort$ix], code=3, angle=90, col="red", lwd=1)
arrows(x=x, y=y, x1=x, y1=y-theta_q25[asort$ix], code=3, angle=90, col="red", lwd=1)
plot(x=x, y=y, type ="p", col = "red", xlab = "prof reais",
ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(x[1], x[n_players]), y=c(y[1], y[n_players]), col = 'green')
arrows(x=x, y=y, x1=x, y1=y+theta_q75[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
arrows(x=x, y=y, x1=x, y1=y-theta_q25[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
theta_q25
theta_q75
x = asort$x-mean(asort$x)
y = theta_medio[asort$ix]-mean(theta_medio)
plot(x=x, y=y, type ="p", col = "red", xlab = "prof reais",
ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(x[1], x[n_players]), y=c(y[1], y[n_players]), col = 'green')
arrows(x=x, y=y, x1=x, y1=theta_q75[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
arrows(x=x, y=y, x1=x, y1=theta_q25[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
summary$summary
profic_fit$theta[1]
summary(profic_fit)
summary(profic_fit)$summary
summary(profic_fit)$theta
summary(profic_fit)$summary
summary(profic_fit)$chains
fit_ss <- extract(profic_fit)
fit_ss['theta']
fit_ss['theta'][1]
fit_ss['theta[1]']
fit_ss['theta'][1,]
fit_ss['theta'][,1]
fit_ss['theta']
fit_ss['theta'][2]
fit_ss
fit_ss$theta[,1]
mean(fit_ss$theta[,1])
summary(profic_fit)
mean(fit_ss$theta[,1])
hist(fit_ss$theta[,1])
mode(fit_ss$theta[,1])
hist(fit_ss$theta[,1], probability = TRUE)
hist(fit_ss$theta[,1], probability = TRUE, color = "red")
hist(fit_ss$theta[,1], probability = TRUE, col = "red")
hist(fit_ss$theta[,1], probability = TRUE, col = "red")
mcmc_areas(
fit_ss,
pars = theta,
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
posterior <- as.array(profic_fit)
posterior
mcmc_areas(
posterior,
pars = theta,
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
dim(posterior)
mcmc_areas(
posterior,
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
mcmc_areas(
posterior,
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
mcmc_areas(
+     posterior, pars = theta,
+     prob = 0.8, # 80% intervals
+     prob_outer = 0.99, # 99%
+     point_est = "mean"
+ )
mcmc_areas(
profic_fit,
pars = theta,
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
mcmc_areas(
profic_fit,
pars = theta[1],
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
posterior[,,1:4]
mcmc_areas(
posterior[,,1:n_players],
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
points(x = 0, y = theta[1])
points(x = 0, y = 'theta[1]')
points(x = 0, y = 4)
plot(profic_fit, plotfun = "hist", pars = "theta", include = FALSE)
plot(profic_fit, plotfun = "hist", pars = "theta", include = TRUE)
theta_medio
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
#----------------------- analise do resultado da estimação -------------------------#
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
asort = sort(a, index.return = TRUE);
x = asort$x-mean(asort$x)
y = theta_medio[asort$ix]-mean(theta_medio)
plot(x=x, y=y, type ="p", col = "red", xlab = "prof reais",
ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(x[1], x[n_players]), y=c(y[1], y[n_players]), col = 'green')
#error plot
arrows(x=x, y=y, x1=x, y1=theta_q75[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
arrows(x=x, y=y, x1=x, y1=theta_q25[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
plot(profic_fit, plotfun = "hist", pars = "theta", include = TRUE)
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
seed(100)
set.seed(100)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
set.seed(100)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
set.seed(101)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
set.seed(10)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
lines(x=c(x[1], x[n_players]), y=c(x[1], x[n_players]), col = 'green')
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
set.seed(16)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
set.seed(19)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
asort = sort(a, index.return = TRUE);
x = asort$x-mean(asort$x)
y = theta_medio[asort$ix]-mean(theta_medio)
plot(x=x, y=y, type ="p", col = "red", xlab = "prof reais",
ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(x[1], x[n_players]), y=c(x[1], x[n_players]), col = 'green')
#error plot
arrows(x=x, y=y, x1=x, y1=theta_q75[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
arrows(x=x, y=y, x1=x, y1=theta_q25[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
plot(profic_fit, plotfun = "hist", pars = "theta", include = TRUE)
print('-------------------------------------------')
print(c('Numero jogadores:      ', n_players))
print(c('Numero jogadores time: ', n_players_per_team))
print(c('Número jogos         : ', n_obs))
print('----------')
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
set.seed(19)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
theta_medio <- summary(profic_fit)$summary[1:n_players,6]; #Para coletar a mediana, pegue a coluna 6
theta_q25 <- summary(profic_fit)$summary[1:n_players, 5]
theta_q75 <- summary(profic_fit)$summary[1:n_players, 7]
asort = sort(a, index.return = TRUE);
x = asort$x-mean(asort$x)
y = theta_medio[asort$ix]-mean(theta_medio)
plot(x=x, y=y, type ="p", col = "red", xlab = "prof reais",
ylab = "prof estim", bg = "red", pch = 21)
lines(x=c(x[1], x[n_players]), y=c(x[1], x[n_players]), col = 'green')
#error plot
arrows(x=x, y=y, x1=x, y1=theta_q75[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
arrows(x=x, y=y, x1=x, y1=theta_q25[asort$ix], code=3, angle=90, col="red", lwd=1, length=0.1)
plot(profic_fit, plotfun = "hist", pars = "theta", include = TRUE)
print('-------------------------------------------')
print(c('Numero jogadores:      ', n_players))
print(c('Numero jogadores time: ', n_players_per_team))
print(c('Número jogos         : ', n_obs))
print('----------')
print(c('correlacao: ', cor(a, theta_medio)))
rho = cor.test(a, theta_medio, method = 'spearman');
print(c('monotonicidade', rho$estimate))
print(c('R2: ', 1 - mean((theta_medio-mean(theta_medio)-(a-mean(a)))^2)/(var(theta_medio)*(n_players-1)/n_players)))
set.seed(19)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
plot(profic_fit, plotfun = "hist", pars = "theta", include = TRUE)
summary(profic_fit)
set.seed(19)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
summary(profic_fit)
set.seed(19)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
plot(profic_fit, plotfun = "hist", pars = "theta", include = TRUE)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
plot(profic_fit, plotfun = "hist", pars = "theta", include = TRUE)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
print(profic_fit)
source("C:/Users/moacy/OneDrive/Documentos/RevisoesArtigosTeses/Danillo/RStanCode/Proficiencias.R", encoding = 'UTF-8')
mcmc_areas(
posterior[,,1:3],
prob = 0.8, # 80% intervals
prob_outer = 0.99, # 99%
point_est = "mean"
)
plot(profic_fit, plotfun = "hist", pars = theta, include = TRUE)
plot(profic_fit, plotfun = "hist", pars = "theta[1:3]", include = TRUE)
plot(profic_fit, plotfun = "hist", pars = "theta[1]", include = TRUE)
plot(profic_fit, plotfun = "hist", pars = c("theta[1]", "theta[100]", "theta[200]", include = TRUE)
)
plot(profic_fit, plotfun = "hist", pars = c("theta[1]", "theta[100]", "theta[200]"), include = TRUE)
summary(profic_fit)$summary
summary(profic_fit)$summary$sd
summary(profic_fit)$summary[1,1]
summary(profic_fit)$summary[1,2]
summary(profic_fit)$summary[1,3]
mean(summary(profic_fit)$summary[,3])
clear all()
INFLUD21.29.11.2021 <- read.csv("C:/Users/moacy/Downloads/INFLUD21-29-11-2021.csv", header=FALSE, sep=";")
View(INFLUD21.29.11.2021)
library(readr)
INFLUD21_29_11_2021 <- read_delim("C:/Users/moacy/Downloads/INFLUD21-29-11-2021.csv",
delim = ";", escape_double = FALSE, locale = locale(date_format = "%d/%m/%Y",
decimal_mark = ",", grouping_mark = ""),
trim_ws = TRUE)
View(INFLUD21_29_11_2021)
problems()
INFLUD21_29_11_2021 <- read.csv("C:/Users/moacy/Downloads/INFLUD21-29-11-2021.csv", header=FALSE, row.names=1, sep=";")
View(INFLUD21_29_11_2021)
INFLUD21_29_11_2021 <- read.csv("C:/Users/moacy/Downloads/INFLUD21.29.11.2021.csv", header=FALSE, row.names=1, sep=";")
View(INFLUD21_29_11_2021)
INFLUD21.29.11.2021 <- read.csv("C:/Users/moacy/Downloads/INFLUD21-29-11-2021.csv", sep=";")
View(INFLUD21.29.11.2021)
INFLUD21.29.11.2021.columns
columns(INFLUD21.29.11.2021)
ncol(INFLUD21.29.11.2021)
covid <- select(INFLUD21.29.11.2021,DT_NOTIFC)
covid <- select(INFLUD21.29.11.2021,"DT_NOTIFIC")
View(covid)
View(covid)
View(covid)
covid = c()
covid <- select(INFLUD21.29.11.2021,"DT_NOTIFIC", "DT_SIN_PRI", "SG_UF_NOT","CS_SEXO", "DT_NASC", "NU_IDADE_N", "TP_IDADE",
"VACINA","DT_UT_DOSE","DT_DOSEUNI","DT_1_DOSE","DT_2_DOSE","EVOLUCAO","DT_EVOLUCA",
"DT_ENCERRA","PCR_SARS2","VACINA_COV","DOSE_1_COV","DOSE_2_COV","LAB_PR_COV")
View(covid)
View(covid)
View(covid)
source("C:/Users/moacy/OneDrive/Documentos/Epidemionovo/INFLUD_SelecionaColunas.R")
sum(covid$EVOLUCAO == 2)
sum(covid$EVOLUCAO == 1)
sum(covid$EVOLUCAO == '1')
covid$EVOLUCAO
covid$EVOLUCAO[18]
covid$EVOLUCAO[10:20]
covid$EVOLUCAO[17]
covid$EVOLUCAO[17] == 1
isnan(covid$EVOLUCAO[17])
isna(covid$EVOLUCAO[17])
covid$EVOLUCAO[17] == NA
is.na(covid$EVOLUCAO[17])
covid <- covid[ !is.na(covid$EVOLUCAO)]
covid <- covid(!is.na(covid$EVOLUCAO))
covid <- covid[!is.na(covid$EVOLUCAO), ]
sum(covid$EVOLUCAO == '1')
sum(covid$EVOLUCAO == '2')
sum(covid$EVOLUCAO == '3')
sum(covid$EVOLUCAO == '9')
sum(covid$EVOLUCAO == '4')
min(covid$DT_NOTIFIC)
max(covid$DT_NOTIFIC)
covid$DT_NOTIFIC
covid$DT_NOTIFIC[1]
type(covid$DT_NOTIFIC[1])
covid$DT_NOTIFIC[1]+1
date(covid$DT_NOTIFIC[1])
as.date(covid$DT_NOTIFIC[1])
as.Date(covid$DT_NOTIFIC[1])
as.Date(covid$DT_NOTIFIC[1], format="d%/%m/%y")
as.Date(covid$DT_NOTIFIC[1], format="d%/%m/%Y")
as.Date(covid$DT_NOTIFIC[1], format="d%/%m/%Y")
as.Date(covid$DT_NOTIFIC[1], format="m%/%d/%Y")
as.Date(covid$DT_NOTIFIC[1], format="dd%/%mm/%Y")
as.Date(covid$DT_NOTIFIC[1], format="D%/%M/%Y")
class(covid$DT_NOTIFIC[1])
as.Date(covid$DT_NOTIFIC[1], format="d%%B%Y")
as.Date(covid$DT_NOTIFIC[1], format="d%B%Y")
as.Date(covid$DT_NOTIFIC[1], format="%d%B%Y")
as.Date(covid$DT_NOTIFIC[1], format="%D/%M/%Y")
as.Date(covid$DT_NOTIFIC[1], format="%d/%m/%Y")
covid$DT_NOTIFIC = as.Date(covid$DT_NOTIFIC, format="%d/%m/%Y")
class(covid$DT_NOTIFIC[1])
min(covid$DT_NOTIFIC)
max(covid$DT_NOTIFIC)
View(covid)
View(covid)
covid$DT_NOTIFIC = as.Date(covid$DT_NOTIFIC, format="%d/%m/%Y")
covid$DT_SIN_PRI = as.Date(covid$DT_SIN_PRI, format="%d/%m/%Y")
covid$DT_NASC = as.Date(covid$DT_NASC, format="%d/%m/%Y")
covid$DT_EVOLUCA = as.Date(covid$DT_EVOLUCA, format="%d/%m/%Y")
covid$DT_ENCERRA = as.Date(covid$DT_ENCERRA, format="%d/%m/%Y")
covid$DOSE_1_COV = as.Date(covid$DOSE_1_COV, format="%d/%m/%Y")
covid$DOSE_2_COV = as.Date(covid$DOSE_2_COV, format="%d/%m/%Y")
sum(covid$EVOLUCAO=2)
sum(covid$EVOLUCAO==2)
View(covid)
sum(covid$VACINA_COV==2)
sum(covid$VACINA_COV=="2")
sum(covid$VACINA_COV=="1")
sum(is.na(covid$VACINA_COV))
sum(is.na(covid$VACINA_COV)&covid$VACINA_COV="1")
sum(is.na(covid$VACINA_COV)&covid$VACINA_COV=="1")
sum(covid$VACINA_COV=="1", na.rm = TRUE)
sum(covid$VACINA_COV=="2", na.rm = TRUE)
sum(covid$VACINA_COV=="3", na.rm = TRUE)
sum(covid$VACINA_COV=="9", na.rm = TRUE)
sum(is.na(covid$VACINA_COV))
sum(!is.na(covid$VACINA_COV))
sum(is.nan(covid$NU_IDADE_N))
sum(!is.nan(covid$NU_IDADE_N))
sum(covid$NU_IDADE_N > 65)
